}
tabela_ca = na.omit(tabela_ca)
tabela_ca$Período = as.Date.character(tabela_ca$Período, "%Y")
#Filtrando dados anuais
tabela_ca = tabela_ct[FALSE,]
for (i in seq(1,dim(tabela_ct)[1],5)){
tabela_ca[i,] = tabela_ct[i,]
}
tabela_ca = na.omit(tabela_ca)
tabela_ca = tabela_ct[FALSE,]
for (i in seq(1,dim(tabela_ct)[1],5)){
tabela_ca[i,] = tabela_ct[i,]
}
tabela_ca = na.omit(tabela_ca)
#Carregando arquivo das contas trimestrais
tabela_ct = read_excel("Renda interna bruta/Tab_Compl_CNT_1T18.xls",
sheet = "Valores Correntes")
#Ajustando os dados
tabela_ct[2,2:15] = tabela_ct[3,2:15]
tabela_ct = tabela_ct[-1,]
tabela_ct = tabela_ct[-2,]
colnames(tabela_ct) = tabela_ct[1,]
tabela_ct = tabela_ct[-1,]
#Filtrando dados anuais
tabela_ca = tabela_ct[FALSE,]
for (i in seq(1,dim(tabela_ct)[1],5)){
tabela_ca[i,] = tabela_ct[i,]
}
tabela_ca = na.omit(tabela_ca)
tabela_ca$Período = as.Date.character(tabela_ca$Período, "%Y")
#Carregando arquivo das contas trimestrais
tabela_ct = read_excel("Renda interna bruta/Tab_Compl_CNT_1T18.xls",
sheet = "Valores Correntes")
#Ajustando os dados
tabela_ct[2,2:15] = tabela_ct[3,2:15]
tabela_ct = tabela_ct[-1,]
tabela_ct = tabela_ct[-2,]
colnames(tabela_ct) = tabela_ct[1,]
tabela_ct = tabela_ct[-1,]
#Filtrando dados anuais
tabela_ca = tabela_ct[FALSE,]
for (i in seq(1,dim(tabela_ct)[1],5)){
tabela_ca[i,] = tabela_ct[i,]
}
tabela_ca = na.omit(tabela_ca)
tabela_ca$Período = as.Date(tabela_ca$Período, "%Y")
class(tabela_ca$Período)
#Carregando arquivo das contas trimestrais
tabela_ct = read_excel("Renda interna bruta/Tab_Compl_CNT_1T18.xls",
sheet = "Valores Correntes")
#Ajustando os dados
tabela_ct[2,2:15] = tabela_ct[3,2:15]
tabela_ct = tabela_ct[-1,]
tabela_ct = tabela_ct[-2,]
colnames(tabela_ct) = tabela_ct[1,]
tabela_ct = tabela_ct[-1,]
#Filtrando dados anuais
tabela_ca = tabela_ct[FALSE,]
for (i in seq(1,dim(tabela_ct)[1],5)){
tabela_ca[i,] = tabela_ct[i,]
}
tabela_ca = na.omit(tabela_ca)
tabela_ca$Período = as.Date(tabela_ca$Período, "%d-%m-%Y")
#Carregando arquivo das contas trimestrais
tabela_ct = read_excel("Renda interna bruta/Tab_Compl_CNT_1T18.xls",
sheet = "Valores Correntes")
#Ajustando os dados
tabela_ct[2,2:15] = tabela_ct[3,2:15]
tabela_ct = tabela_ct[-1,]
tabela_ct = tabela_ct[-2,]
colnames(tabela_ct) = tabela_ct[1,]
tabela_ct = tabela_ct[-1,]
#Filtrando dados anuais
tabela_ca = tabela_ct[FALSE,]
for (i in seq(1,dim(tabela_ct)[1],5)){
tabela_ca[i,] = tabela_ct[i,]
}
tabela_ca = na.omit(tabela_ca)
tabela_ca$Período = as.Date(tabela_ca$Período, "%Y")
pib_t = tabela_ct[c('Período', 'Total'),]
View(pib_t)
library(dplyr)
tabela_ct = read_excel("Renda interna bruta/Tab_Compl_CNT_1T18.xls",
sheet = "Valores Correntes")
pib_t = select(tabela_ct, Período, PIB)
#Carregando arquivo das contas trimestrais
tabela_ct = read_excel("Renda interna bruta/Tab_Compl_CNT_1T18.xls",
sheet = "Valores Correntes")
#Ajustando os dados
tabela_ct[2,2:15] = tabela_ct[3,2:15]
tabela_ct = tabela_ct[-1,]
tabela_ct = tabela_ct[-2,]
colnames(tabela_ct) = tabela_ct[1,]
tabela_ct = tabela_ct[-1,]
#Filtrando dados anuais
tabela_ca = tabela_ct[FALSE,]
for (i in seq(1,dim(tabela_ct)[1],5)){
tabela_ca[i,] = tabela_ct[i,]
}
tabela_ca = na.omit(tabela_ca)
#Filtrando dados trimestrais
tabela_ct = tabela_ct[-c(seq(1,dim(tabela_ct)[1],5)), ]
#Definindo séries
pib_t = select(tabela_ct, Período, PIB)
View(pib_t)
pib_t = tabela_ct[,c('Período', 'PIB')]
View(pib_t)
consumo_familias_t = tabela_ct[,c('Período', 'Consumo das Famílias')]
consumo_governo_t = tabela_ct[,c('Período', 'Consumo do Governo')]
fbkf_t = tabela_ct[,c('Período', 'Formação Bruta de Capital Fixo')]
View(consumo_familias_t)
View(consumo_governo_t)
View(fbkf_t)
export_t = tabela_ct[,c('Período', 'Exportação')]
import_t = tabela_ct[,c('Período', 'Importação')]
aborv_dom_t = pib_t + consumo_familias_t + consumo_governo_t
aborv_dom_t = consumo_familias_t + consumo_governo_t + fbkf_t
tabela_ct[,-1]=apply(base[,-1],2,function(x)as.numeric(gsub(",",".",x)))
tabela_ct[,-1]=apply(tabela_ct[,-1],2,function(x)as.numeric(gsub(",",".",x)))
pib_t = tabela_ct[,c('Período', 'PIB')]
consumo_familias_t = tabela_ct[,c('Período', 'Consumo das Famílias')]
consumo_governo_t = tabela_ct[,c('Período', 'Consumo do Governo')]
fbkf_t = tabela_ct[,c('Período', 'Formação Bruta de Capital Fixo')]
export_t = tabela_ct[,c('Período', 'Exportação')]
import_t = tabela_ct[,c('Período', 'Importação')]
aborv_dom_t = consumo_familias_t + consumo_governo_t + fbkf_t
aborv_dom_t = consumo_familias_t$`Consumo das Famílias` + consumo_governo_t$`Consumo do Governo` + fbkf_t$`Formação Bruta de Capital Fixo`
aborv_dom_t = tabela_ct[,c('Período', consumo_familias_t$`Consumo das Famílias` + consumo_governo_t$`Consumo do Governo` + fbkf_t$`Formação Bruta de Capital Fixo`)]
absorv_dom_t = consumo_familias_t$`Consumo das Famílias` + consumo_governo_t$`Consumo do Governo` + fbkf_t$`Formação Bruta de Capital Fixo`
absorv_dom_t = tabela_ct[,'Período'] + absorv_dom_t
absorv_dom_t$'Período' = tabela_ct[,'Período']
View(absorv_dom_t)
tabela_ct[,'Período']
pib_t = tabela_ct[,c('Período', 'PIB')]
consumo_familias_t = tabela_ct[,c('Período', 'Consumo das Famílias')]
consumo_governo_t = tabela_ct[,c('Período', 'Consumo do Governo')]
fbkf_t = tabela_ct[,c('Período', 'Formação Bruta de Capital Fixo')]
export_t = tabela_ct[,c('Período', 'Exportação')]
import_t = tabela_ct[,c('Período', 'Importação')]
absorv_dom_t = tabela_ct[,c('Período', 'Importação')]
absorv_dom_t$Importação =  consumo_familias_t$`Consumo das Famílias` + consumo_governo_t$`Consumo do Governo` + fbkf_t$`Formação Bruta de Capital Fixo`
View(absorv_dom_t)
View(import_t)
absorv_dom_t = tabela_ct[,c('Período', 'PIB')]
absorv_dom_t$PIB = consumo_familias_t$`Consumo das Famílias` + consumo_governo_t$`Consumo do Governo` + fbkf_t$`Formação Bruta de Capital Fixo`
View(absorv_dom_t)
colnames(absorv_dom_t) = c('Período', 'Absorção Doméstica')
var_est_t = tabela_ct[,c('Período', 'Variação de Estoques')]
View(var_est_t)
#Rotina para calcular a renda interna bruta
#Feito por: Felipe Simplício Ferreira
#última atualização: 06/12/2019
#Definindo diretórios a serem utilizados
getwd()
setwd("C:\\Users\\User\\Documents\\Renda interna bruta")
#Carregando pacotes que serão utilizados
library(readxl)
#Carregando arquivo das contas trimestrais
tabela_ct = read_excel("Tab_Compl_CNT_4T18.xls",
sheet = "Valores Correntes")
tabela_ct_v95 = read_excel("Tab_Compl_CNT_4T18.xls",
sheet = "Val encad preços 95 com ajuste")
#Ajustando os dados
tabela_ct[2,2:15] = tabela_ct[3,2:15]
tabela_ct = tabela_ct[-1,]
tabela_ct = tabela_ct[-2,]
colnames(tabela_ct) = tabela_ct[1,]
tabela_ct = tabela_ct[-1,]
tabela_ct[,-1]=apply(tabela_ct[,-1],2,function(x)as.numeric(gsub(",",".",x)))
tabela_ct_v95[2,2:15] = tabela_ct_v95[3,2:15]
tabela_ct_v95 = tabela_ct_v95[-1,]
tabela_ct_v95 = tabela_ct_v95[-2,]
colnames(tabela_ct_v95) = tabela_ct_v95[1,]
tabela_ct_v95 = tabela_ct_v95[-1,]
tabela_ct_v95[,-1]=apply(tabela_ct_v95[,-1],2,function(x)as.numeric(gsub(",",".",x)))
#Filtrando dados anuais
tabela_ca = tabela_ct[FALSE,]
for (i in seq(1,dim(tabela_ct)[1],5)){
tabela_ca[i,] = tabela_ct[i,] #Coletando os dados anuais, que estão logo após os trimestrais
}
tabela_ca = na.omit(tabela_ca)
tabela_ca_v95 = tabela_ct_v95[FALSE,]
for (i in seq(4,dim(tabela_ct_v95)[1],4)){
for (j in 2:dim(tabela_ct_v95)[2]){
tabela_ca_v95[i,j] = (tabela_ct_v95[i-3,j] + tabela_ct_v95[i-2,j] + tabela_ct_v95[i-1,j] + tabela_ct_v95[i,j])/4 #Calculando média dos 4 trimestres do ano
}
}
tabela_ca_v95$Período = tabela_ct_v95$Período #Usando coluna de data para não excluir as colunas sem data
tabela_ca_v95 = na.omit(tabela_ca_v95)
tabela_ca_v95$Período = tabela_ca$Período[-1] #Ajeitando a data
#Filtrando dados trimestrais
tabela_ct = tabela_ct[-c(seq(1,dim(tabela_ct)[1],5)), ]
#Definindo séries
#Trimestrais a valores correntes
pib_t = tabela_ct[,c('Período', 'PIB')]
consumo_familias_t = tabela_ct[,c('Período', 'Consumo das Famílias')]
consumo_governo_t = tabela_ct[,c('Período', 'Consumo do Governo')]
fbkf_t = tabela_ct[,c('Período', 'Formação Bruta de Capital Fixo')]
export_t = tabela_ct[,c('Período', 'Exportação')]
import_t = tabela_ct[,c('Período', 'Importação')]
absorv_dom_t = tabela_ct[,c('Período', 'PIB')]
absorv_dom_t$PIB = consumo_familias_t$`Consumo das Famílias` + consumo_governo_t$`Consumo do Governo` + fbkf_t$`Formação Bruta de Capital Fixo`
colnames(absorv_dom_t) = c('Período', 'Absorção Doméstica')
var_est_t = tabela_ct[,c('Período', 'Variação de Estoques')]
#Trimestrais a valores de 95
pib_t_v95 = tabela_ct_v95[,c('Período', 'PIB')]
consumo_familias_t_v95 = tabela_ct_v95[,c('Período', 'Consumo das Famílias')]
consumo_governo_t_v95 = tabela_ct_v95[,c('Período', 'Consumo do Governo')]
fbkf_t_v95 = tabela_ct_v95[,c('Período', 'Formação Bruta de Capital Fixo')]
export_t_v95 = tabela_ct_v95[,c('Período', 'Exportação')]
import_t_v95 = tabela_ct_v95[,c('Período', 'Importação')]
absorv_dom_t_v95 = tabela_ct_v95[,c('Período', 'PIB')]
absorv_dom_t_v95$PIB = consumo_familias_t_v95$`Consumo das Famílias` + consumo_governo_t_v95$`Consumo do Governo` + fbkf_t_v95$`Formação Bruta de Capital Fixo`
colnames(absorv_dom_t_v95) = c('Período', 'Absorção Doméstica')
#Anuais a valores de 95
pib_a_v95 = tabela_ca_v95[,c('Período', 'PIB')]
consumo_familias_a_v95 = tabela_ca_v95[,c('Período', 'Consumo das Famílias')]
consumo_governo_a_v95 = tabela_ca_v95[,c('Período', 'Consumo do Governo')]
fbkf_a_v95 = tabela_ca_v95[,c('Período', 'Formação Bruta de Capital Fixo')]
export_a_v95 = tabela_ca_v95[,c('Período', 'Exportação')]
import_a_v95 = tabela_ca_v95[,c('Período', 'Importação')]
absorv_dom_a_v95 = tabela_ca_v95[,c('Período', 'PIB')]
absorv_dom_a_v95$PIB = consumo_familias_a_v95$`Consumo das Famílias` + consumo_governo_a_v95$`Consumo do Governo` + fbkf_a_v95$`Formação Bruta de Capital Fixo`
colnames(absorv_dom_a_v95) = c('Período', 'Absorção Doméstica')
#Calculo da variação real anual
var_r_pib_t = pib_t_v95[FALSE, ]
for (i in 1:dim(pib_t_v95)[1]){
for (j in 1:dim(tabela_ca)[1]){
if (i <= 4)
var_r_pib_t[i,2] = (pib_t_v95[i,2]/(tabela_ca$PIB[j]/4)-1)*100
else
var_r_pib_t[i,2] = (pib_t_v95[i,2]/(mean(tabela_ct_v95$PIB[(j-4):(j-1)]))-1)*100
#Como calcular pra todos?
print(i)
print("/")
print(j)
break
}
}
var_r_pib_t = pib_t_v95[FALSE, ]
for (j in 1:dim(tabela_ca)[1]){
for (i in 1:dim(pib_t_v95)[1]){
if (i <= 4)
var_r_pib_t[i,2] = (pib_t_v95[i,2]/(tabela_ca$PIB[j]/4)-1)*100
else
var_r_pib_t[i,2] = (pib_t_v95[i,2]/(mean(tabela_ct_v95$PIB[(j-4):(j-1)]))-1)*100
#Como calcular pra todos?
print(i)
print("/")
print(j)
break
}
}
var_r_pib_t$Período = pib_t_v95$Período
#Rotina para calcular a renda interna bruta
#Feito por: Felipe Simplício Ferreira
#última atualização: 06/12/2019
#Definindo diretórios a serem utilizados
getwd()
setwd("C:\\Users\\User\\Documents\\Renda interna bruta")
#Carregando pacotes que serão utilizados
library(readxl)
#Carregando arquivo das contas trimestrais
tabela_ca = read_excel("dados.xlsx", sheet = "Anual_2000-2017 (ref2010)")
View(tabela_ca)
#valores correntes
tabela_ca_2000_2017_vcorr = tabela_ca_2000_2017[,1:10]
colnames(tabela_ca_2000_2017_vcorr) = tabela_ca_2000_2017_vcorr[1,]
tabela_ca_2000_2017_vcorr = tabela_ca_2000_2017_vcorr[-1,]
tabela_ca_2000_2017_vcorr[,-1] = apply(tabela_ca_2000_2017_vcorr[,-1],2,function(x)as.numeric(gsub(",",".",x)))
#Carregando arquivo das contas trimestrais
tabela_ca_2000_2017= read_excel("dados.xlsx", sheet = "Anual_2000-2017 (ref201
tabela_ca_2000_2017= read_excel("dados.xlsx", sheet = "Anual_2000-2017 (ref2010)")
#valores correntes
tabela_ca_2000_2017_vcorr = tabela_ca_2000_2017[,1:10]
View(tabela_ca_2000_2017_vcorr)
tabela_ct_1996_2018 = read_excel("dados.xlsx", sheet = "Trimestral_1996-2018 (ref2010)")
View(tabela_ct_1996_2018)
arrumar_tabelas = function(nome_df){
nome_df = tabela_ca_2000_2017[,1:10]
colnames(nome_df) = nome_df[1,]
nome_df = nome_df[-1,]
nome_df[,-1] = apply(nome_df[,-1],2,function(x)as.numeric(gsub(",",".",x)))
}
arrumar_tabelas = function(df_entrada ,df_saida){
df_entrada = df_saida[,1:10]
colnames(df_entrada) = df_entrada[1,]
df_entrada = df_entrada[-1,]
df_entrada[,-1] = apply(df_entrada[,-1],2,function(x)as.numeric(gsub(",",".",x)))
}
tabela_ca_2000_2017_vcorr = arrumar_tabelas(tabela_ca_2000_2017, tabela_ca_2000_2017_vcorr)
View(tabela_ca_2000_2017_vcorr)
#Rotina para calcular a renda interna bruta
#Feito por: Felipe Simplício Ferreira
#última atualização: 06/12/2019
#Definindo diretórios a serem utilizados
getwd()
setwd("C:\\Users\\User\\Documents\\Renda interna bruta")
#Carregando pacotes que serão utilizados
library(readxl)
#Carregando arquivo das contas trimestrais
tabela_ca_2000_2017= read_excel("dados.xlsx", sheet = "Anual_2000-2017 (ref2010)")
tabela_ct_1996_2018 = read_excel("dados.xlsx", sheet = "Trimestral_1996-2018 (ref2010)")
#valores correntes
arrumar_tabelas = function(df_entrada ,df_saida){
df_entrada = df_saida[,1:10]
colnames(df_entrada) = df_entrada[1,]
df_entrada = df_entrada[-1,]
df_entrada[,-1] = apply(df_entrada[,-1],2,function(x)as.numeric(gsub(",",".",x)))
}
tabela_ca_2000_2017_vcorr = arrumar_tabelas(tabela_ca_2000_2017, tabela_ca_2000_2017_vcorr)
#valores correntes
arrumar_tabelas = function(df_entrada ,df_saida){
df_saida = df_entrada[,1:10]
colnames(df_saida) = df_saida[1,]
df_saida = df_saida[-1,]
df_saida[,-1] = apply(df_saida[,-1],2,function(x)as.numeric(gsub(",",".",x)))
}
tabela_ca_2000_2017_vcorr = arrumar_tabelas(tabela_ca_2000_2017, tabela_ca_2000_2017_vcorr)
View(tabela_ca_2000_2017_vcorr)
tabela_ca_2000_2017_vcorr = tabela_ca_2000_2017[,1:10]
colnames(tabela_ca_2000_2017_vcorr) = tabela_ca_2000_2017_vcorr[1,]
tabela_ca_2000_2017_vcorr = tabela_ca_2000_2017_vcorr[-1,]
tabela_ca_2000_2017_vcorr[,-1] = apply(tabela_ca_2000_2017_vcorr[,-1],2,function(x)as.numeric(gsub(",",".",x)))
View(tabela_ca_2000_2017_vcorr)
#Rotina para calcular a renda interna bruta
#Feito por: Felipe Simplício Ferreira
#última atualização: 06/12/2019
#Definindo diretórios a serem utilizados
getwd()
setwd("C:\\Users\\User\\Documents\\Renda interna bruta")
#Carregando pacotes que serão utilizados
library(readxl)
#Carregando arquivo das contas trimestrais
tabela_ca_2000_2017= read_excel("dados.xlsx", sheet = "Anual_2000-2017 (ref2010)")
tabela_ct_1996_2018 = read_excel("dados.xlsx", sheet = "Trimestral_1996-2018 (ref2010)")
tabela_ca_2000_2017_vcorr = tabela_ca_2000_2017[,1:10]
View(tabela_ca_2000_2017_vcorr)
colnames(tabela_ca_2000_2017_vcorr) = tabela_ca_2000_2017_vcorr[1,]
tabela_ca_2000_2017_vcorr = tabela_ca_2000_2017_vcorr[-1,]
tabela_ca_2000_2017_vcorr[,-1] = apply(tabela_ca_2000_2017_vcorr[,-1],2,function(x)as.numeric(gsub(",",".",x)))
tabela_ca_2000_2017_vcorr = arrumar_tabelas(tabela_ca_2000_2017, tabela_ca_2000_2017_vcorr)
arrumar_tabelas = function(df_entrada ,df_saida){
df_saida = df_entrada[,1:10]
colnames(df_saida) = df_saida[1,]
df_saida = df_saida[-1,]
df_saida[,-1] = apply(df_saida[,-1],2,function(x)as.numeric(gsub(",",".",x)))
}
tabela_ca_2000_2017_vcorr = arrumar_tabelas(tabela_ca_2000_2017, tabela_ca_2000_2017_vcorr)
View(tabela_ca_2000_2017_vcorr)
tabela_ca_2000_2017_vcorr = tabela_ca_2000_2017[,1:10]
View(tabela_ca_2000_2017_vcorr)
colnames(tabela_ca_2000_2017_vcorr) = tabela_ca_2000_2017_vcorr[1,]
tabela_ca_2000_2017_vcorr = tabela_ca_2000_2017_vcorr[-1,]
tabela_ca_2000_2017_vcorr[,-1] = apply(tabela_ca_2000_2017_vcorr[,-1],2,function(x)as.numeric(gsub(",",".",x)))
tabela_ca_2000_2017_vcorr = arrumar_tabelas(tabela_ca_2000_2017, tabela_ca_2000_2017_vcorr)
View(tabela_ca_2000_2017_vcorr)
tabela_ca_2000_2017_vcorr = tabela_ca_2000_2017[,1:10]
colnames(tabela_ca_2000_2017_vcorr) = tabela_ca_2000_2017_vcorr[1,]
tabela_ca_2000_2017_vcorr = tabela_ca_2000_2017_vcorr[-1,]
tabela_ca_2000_2017_vcorr[,-1] = apply(tabela_ca_2000_2017_vcorr[,-1],2,function(x)as.numeric(gsub(",",".",x)))
View(arrumar_tabelas)
View(tabela_ca_2000_2017)
#valores correntes
arrumar_tabelas = function(df_entrada ,df_saida, qtd_colunas){
df_saida = df_entrada[,1:qtd_colunas]
colnames(df_saida) = df_saida[1,]
df_saida = df_saida[-1,]
df_saida[,-1] = apply(df_saida[,-1],2,function(x)as.numeric(gsub(",",".",x)))
}
tabela_ca_2000_2017_vcorr = arrumar_tabelas(tabela_ca_2000_2017, tabela_ca_2000_2017_vcorr, 10)
View(tabela_ca_2000_2017_vcorr)
tabela_ca_2000_2017_vcorr = tabela_ca_2000_2017[,1:10]
View(tabela_ca_2000_2017_vcorr)
colnames(tabela_ca_2000_2017_vcorr) = tabela_ca_2000_2017_vcorr[1,]
tabela_ca_2000_2017_vcorr = tabela_ca_2000_2017_vcorr[-1,]
tabela_ca_2000_2017_vcorr[,-1] = apply(tabela_ca_2000_2017_vcorr[,-1],2,function(x)as.numeric(gsub(",",".",x)))
#valores correntes
arrumar_tabelas = function(df_entrada ,df_saida, qtd_colunas){
df_saida = df_entrada[,1:qtd_colunas]
#colnames(df_saida) = df_saida[1,]
df_saida = df_saida[-1,]
df_saida[,-1] = apply(df_saida[,-1],2,function(x)as.numeric(gsub(",",".",x)))
}
tabela_ca_2000_2017_vcorr = arrumar_tabelas(tabela_ca_2000_2017, tabela_ca_2000_2017_vcorr, 10)
View(tabela_ca_2000_2017_vcorr)
arrumar_tabelas = function(df_entrada ,df_saida, qtd_colunas){
df_saida = df_entrada[,1:qtd_colunas]
#colnames(df_saida) = df_saida[1,]
#df_saida = df_saida[-1,]
#df_saida[,-1] = apply(df_saida[,-1],2,function(x)as.numeric(gsub(",",".",x)))
}
tabela_ca_2000_2017_vcorr = arrumar_tabelas(tabela_ca_2000_2017, tabela_ca_2000_2017_vcorr, 10)
#valores correntes
arrumar_tabelas = function(df_entrada ,df_saida, qtd_colunas){
df_saida = df_entrada[,1:qtd_colunas]
colnames(df_saida) = df_saida[1,]
#df_saida = df_saida[-1,]
#df_saida[,-1] = apply(df_saida[,-1],2,function(x)as.numeric(gsub(",",".",x)))
}
tabela_ca_2000_2017_vcorr = arrumar_tabelas(tabela_ca_2000_2017, tabela_ca_2000_2017_vcorr, 10)
#valores correntes
arrumar_tabelas = function(df_entrada ,df_saida, qtd_colunas){
df_saida = df_entrada[,1:qtd_colunas]
colnames(df_saida) = df_saida[1,]
#df_saida = df_saida[-1,]
#df_saida[,-1] = apply(df_saida[,-1],2,function(x)as.numeric(gsub(",",".",x)))
}
tabela_ca_2000_2017_vcorr = arrumar_tabelas(tabela_ca_2000_2017, tabela_ca_2000_2017_vcorr, 10)
#valores correntes
arrumar_tabelas = function(df_entrada ,df_saida, qtd_colunas){
df_saida = df_entrada[,1:qtd_colunas]
colnames(df_saida) = df_saida[1,]
#df_saida = df_saida[-1,]
#df_saida[,-1] = apply(df_saida[,-1],2,function(x)as.numeric(gsub(",",".",x)))
}
tabela_ca_2000_2017_vcorr = arrumar_tabelas(tabela_ca_2000_2017, tabela_ca_2000_2017_vcorr, 10)
#valores correntes
arrumar_tabelas = function(df_entrada ,df_saida, qtd_colunas){
df_saida = df_entrada[,1:qtd_colunas]
colnames(df_saida) = df_saida[1,]
df_saida = df_saida[-1,]
#df_saida[,-1] = apply(df_saida[,-1],2,function(x)as.numeric(gsub(",",".",x)))
}
tabela_ca_2000_2017_vcorr = arrumar_tabelas(tabela_ca_2000_2017, tabela_ca_2000_2017_vcorr, 10)
View(tabela_ca_2000_2017_vcorr)
#valores correntes
arrumar_tabelas = function(df_entrada ,df_saida, qtd_colunas){
df_saida = df_entrada[,1:qtd_colunas]
colnames(df_saida) = df_saida[1,]
df_saida = df_saida[-1,]
df_saida[,-1] = apply(df_saida[,-1],2,function(x)as.numeric(gsub(",",".",x)))
}
tabela_ca_2000_2017_vcorr = arrumar_tabelas(tabela_ca_2000_2017, tabela_ca_2000_2017_vcorr, 10)
#valores correntes
arrumar_tabelas = function(df_entrada ,df_saida, qtd_colunas){
df_saida = df_entrada[,1:qtd_colunas]
colnames(df_saida) = df_saida[1,]
df_saida = df_saida[-1,]
df_saida[,-1] = apply(df_saida[,-1],2,function(x)as.numeric(gsub(",",".",x)))
df_saida = as.Dataframe(df_saida)
}
tabela_ca_2000_2017_vcorr = arrumar_tabelas(tabela_ca_2000_2017, tabela_ca_2000_2017_vcorr, 10)
#valores correntes
arrumar_tabelas = function(df_entrada ,df_saida, qtd_colunas){
df_saida = df_entrada[,1:qtd_colunas]
colnames(df_saida) = df_saida[1,]
df_saida = df_saida[-1,]
df_saida[,-1] = apply(df_saida[,-1],2,function(x)as.numeric(gsub(",",".",x)))
df_saida = as.data.frame(df_saida)
}
tabela_ca_2000_2017_vcorr = arrumar_tabelas(tabela_ca_2000_2017, tabela_ca_2000_2017_vcorr, 10)
View(tabela_ca_2000_2017_vcorr)
#valores correntes
arrumar_tabelas = function(df_entrada ,df_saida, qtd_colunas){
df_saida = df_entrada[,1:qtd_colunas]
colnames(df_saida) = df_saida[1,]
df_saida = df_saida[-1,]
df_saida[,-1] = apply(df_saida[,-1],2,function(x)as.numeric(gsub(",",".",x)))
#df_saida = as.data.frame(df_saida)
return(df_saida)
}
tabela_ca_2000_2017_vcorr = arrumar_tabelas(tabela_ca_2000_2017, tabela_ca_2000_2017_vcorr, 10)
View(tabela_ca_2000_2017_vcorr)
#valores correntes
arrumar_tabelas = function(df_entrada ,df_saida, qtd_colunas){
df_saida = df_entrada[,1:qtd_colunas]
colnames(df_saida) = df_saida[1,]
df_saida = df_saida[-1,]
df_saida[,-1] = apply(df_saida[,-1],2,function(x)as.numeric(gsub(",",".",x)))
return(df_saida)
}
#Rotina para calcular a renda interna bruta
#Feito por: Felipe Simplício Ferreira
#última atualização: 06/12/2019
#Definindo diretórios a serem utilizados
getwd()
setwd("C:\\Users\\User\\Documents\\Renda interna bruta")
#Carregando pacotes que serão utilizados
library(readxl)
#Carregando arquivo das contas trimestrais
tabela_ca_2000_2017= read_excel("dados.xlsx", sheet = "Anual_2000-2017 (ref2010)")
tabela_ct_1996_2018 = read_excel("dados.xlsx", sheet = "Trimestral_1996-2018 (ref2010)")
#valores correntes
arrumar_tabelas = function(df_entrada ,df_saida, qtd_colunas){
df_saida = df_entrada[,1:qtd_colunas]
colnames(df_saida) = df_saida[1,]
df_saida = df_saida[-1,]
df_saida[,-1] = apply(df_saida[,-1],2,function(x)as.numeric(gsub(",",".",x)))
return(df_saida)
}
tabela_ca_2000_2017_vcorr = arrumar_tabelas(tabela_ca_2000_2017, tabela_ca_2000_2017_vcorr, 10)
View(tabela_ca_2000_2017_vcorr)
separa_colunas = function(data, nome_coluna, df_entrada){
df_saida = df_entrada[,c(data, nome_coluna)]
return(df_saida)
}
pib_a_vcorr = separa_colunas('Período', 'Consumo das Famílias', tabela_ca_2000_2017_vcorr)
View(pib_a_vcorr)
pib_a_vcorr2 = tabela_ca_2000_2017_vcorr[,c('Período', 'PIB')]
View(pib_a_vcorr2)
View(pib_a_vcorr)
View(pib_a_vcorr2)
pib_a_vcorr = separa_colunas('Período', 'PIB', tabela_ca_2000_2017_vcorr)
pib_a_vcorr = separa_colunas('Período', 'PIB', tabela_ca_2000_2017_vcorr)
consumo_familias_a_vcorr = separa_colunas('Período', 'Consumo das Famílias', tabela_ca_2000_2017_vcorr)
consumo_governo_a_vcorr = separa_colunas('Período', 'Consumo do Governo', tabela_ca_2000_2017_vcorr)
fbkf_a_vcorr = separa_colunas('Período', 'Formação Bruta de Capital Fixo', tabela_ca_2000_2017_vcorr)
export_a_vcorr = separa_colunas('Período', 'Exportação', tabela_ca_2000_2017_vcorr)
import_a_vcorr = separa_colunas('Período', 'Importação', tabela_ca_2000_2017_vcorr)
absorv_dom_a_vcorr = separa_colunas('Período', 'Absorção Doméstica', tabela_ca_2000_2017_vcorr)
setwd("C:\\Users\\User\\Documents\\GitHub\\rentainternabruta")
