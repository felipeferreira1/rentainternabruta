ind_pib_vn_1990_2000 = pib_a_vra_1990_2000
ind_pib_vn_1990_2000[1,2] = 100
for (i in 2:dim(pib_a_vra_1990_2000)[1]){
ind_pib_vn_1990_2000[i,2] = ind_pib_vn_1990_2000[i-1,2] * (pib_a_vra_1990_2000[i,2] / 100 + 1)
}
ind_rib_vn_1990_2000 = var_rib_1_vn_1990_2000
ind_rib_vn_1990_2000[1,2] = 100
for (i in 2:dim(var_rib_1_vn_1990_2000)[1]){
ind_rib_vn_1990_2000[i,2] = ind_rib_vn_1990_2000[i-1,2]*var_rib_1_vn_1990_2000[i,2]
}
ind_rib_pib_vn_1990_2000 = (ind_rib_vn_1990_2000[,-1] / ind_pib_vn_1990_2000[,-1])*100
ind_rib_pib_vn_1990_2000 = data.frame(ind_rib_vn_1990_2000[,1], ind_rib_pib_vn_1990_2000)
colnames(ind_rib_pib_vn_1990_2000) = c("Período", "Índice RIB/PIB(Pa)")
######PARTE 3######
#Carregando arquivo das contas trimestrais 1996-2018 (ref 2010)
tabela_ct_1996_2018 = read_excel("dados.xlsx", sheet = "Trimestral_1996-2018 (ref2010)")
#Valores correntes
tabela_ct_1996_2018_vcorr = arrumar_tabelas(tabela_ct_1996_2018, 2:9)
pib_a_vcorr_1996_2018 = separar_colunas('Período', 'PIB', tabela_ct_1996_2018_vcorr)
consumo_familias_a_vcorr_1996_2018 = separar_colunas('Período', 'Consumo das Famílias', tabela_ct_1996_2018_vcorr)
consumo_governo_a_vcorr_1996_2018 = separar_colunas('Período', 'Consumo do Governo', tabela_ct_1996_2018_vcorr)
fbkf_a_vcorr_1996_2018 = separar_colunas('Período', 'Formação Bruta de Capital Fixo', tabela_ct_1996_2018_vcorr)
export_a_vcorr_1996_2018 = separar_colunas('Período', 'Exportação', tabela_ct_1996_2018_vcorr)
import_a_vcorr_1996_2018 = separar_colunas('Período', 'Importação', tabela_ct_1996_2018_vcorr)
absorv_dom_a_vcorr_1996_2018 = separar_colunas('Período', 'Absorção Doméstica', tabela_ct_1996_2018_vcorr)
var_est_a_vcorr_1996_2018 = separar_colunas('Período', 'Variação de Estoques', tabela_ct_1996_2018_vcorr)
#Variação real anual
tabela_ct_1996_2018_vra = arrumar_tabelas(tabela_ct_1996_2018, 10:15)
pib_a_vra_1996_2018 = separar_colunas('Período', 'PIB', tabela_ct_1996_2018_vra)
consumo_familias_a_vra_1996_2018 = separar_colunas('Período', 'Consumo das Famílias', tabela_ct_1996_2018_vra)
consumo_governo_a_vra_1996_2018 = separar_colunas('Período', 'Consumo do Governo', tabela_ct_1996_2018_vra)
fbkf_a_vra_1996_2018 = separar_colunas('Período', 'Formação Bruta de Capital Fixo', tabela_ct_1996_2018_vra)
export_a_vra_1996_2018 = separar_colunas('Período', 'Exportação', tabela_ct_1996_2018_vra)
import_a_vra_1996_2018 = separar_colunas('Período', 'Importação', tabela_ct_1996_2018_vra)
#Variação nominal anual
pib_a_vna_1996_2018 = var_nominal(pib_a_vcorr_1996_2018)
consumo_familias_a_vna_1996_2018 = var_nominal(consumo_familias_a_vcorr_1996_2018)
consumo_governo_a_vna_1996_2018 = var_nominal(consumo_governo_a_vcorr_1996_2018)
fbkf_a_vna_1996_2018 = var_nominal(fbkf_a_vcorr_1996_2018)
export_a_vna_1996_2018 = var_nominal(export_a_vcorr_1996_2018)
import_a_vna_1996_2018 = var_nominal(import_a_vcorr_1996_2018)
#Calculando deflatores
px_vn_1996_2018 = deflatores_div_cem_mais_um(export_a_vna_1996_2018, export_a_vra_1996_2018, "Período", "Px")
pm_vn_1996_2018 = deflatores_div_cem_mais_um(import_a_vna_1996_2018, import_a_vra_1996_2018, "Período", "Pm")
pc_vn_1996_2018 = deflatores_div_cem_mais_um(consumo_familias_a_vna_1996_2018, consumo_familias_a_vra_1996_2018, "Período", "Pc")
pg_vn_1996_2018 = deflatores_div_cem_mais_um(consumo_governo_a_vna_1996_2018, consumo_governo_a_vra_1996_2018, "Período", "Pg")
pfbkf_vn_1996_2018 = deflatores_div_cem_mais_um(fbkf_a_vna_1996_2018, fbkf_a_vra_1996_2018, "Período", "Pfbkf")
pesoc_vn_1996_2018 = deflatores_div(consumo_familias_a_vcorr_1996_2018, absorv_dom_a_vcorr_1996_2018, "Período", "Peso C")
pesog_vn_1996_2018 = deflatores_div(consumo_governo_a_vcorr_1996_2018, absorv_dom_a_vcorr_1996_2018, "Período", "Peso G")
pesofbkf_vn_1996_2018 = deflatores_div(fbkf_a_vcorr_1996_2018, absorv_dom_a_vcorr_1996_2018, "Período", "Peso Fbkf")
pa_vn_1996_2018 = 1/((pesoc_vn_1996_2018[,-1])/pc_vn_1996_2018[,-1] + (pesog_vn_1996_2018[,-1]/pg_vn_1996_2018[,-1]) + (pesofbkf_vn_1996_2018[,-1]/pfbkf_vn_1996_2018[,-1]))
pa_vn_1996_2018 = data.frame(pesoc_vn_1996_2018[,1], pa_vn_1996_2018)
colnames(pa_vn_1996_2018) = c("Período", "Pa")
p_pib_vn_1996_2018 = deflatores_div_cem_mais_um(pib_a_vna_1996_2018, pib_a_vra_1996_2018, "Período", "Ppib")
#Cálculo Pa calculado
saa_vn_1996_2018 = deflatores_div(absorv_dom_a_vcorr_1996_2018, pib_a_vcorr_1996_2018, "Período", "Saa")
p_pib_saa_vn_1996_2018 = deflatores_mult(p_pib_vn_1996_2018, saa_vn_1996_2018, "Período", "Ppib * Saa")
sx_vn_1996_2018 = deflatores_div(export_a_vcorr_1996_2018, pib_a_vcorr_1996_2018, "Período", "Sx")
sm_vn_1996_2018 = deflatores_div(import_a_vcorr_1996_2018, pib_a_vcorr_1996_2018, "Período", "Sm")
sxpx_smpx_vn_1996_2018 = (sx_vn_1996_2018[,-1]/px_vn_1996_2018[,-1]) - (sm_vn_1996_2018[,-1]/pm_vn_1996_2018[,-1])
sxpx_smpx_vn_1996_2018 = data.frame(sx_vn_1996_2018[,1] , sxpx_smpx_vn_1996_2018)
colnames(sxpx_smpx_vn_1996_2018) = c("Período", " (Sx/Px - Sm/Pm)")
pa_calc_vn_1996_2018 = p_pib_saa_vn_1996_2018[,-1] / (1 - p_pib_vn_1996_2018[,-1] * sxpx_smpx_vn_1996_2018[,-1])
pa_calc_vn_1996_2018 = data.frame(p_pib_saa_vn_1996_2018[,1], pa_calc_vn_1996_2018)
colnames(pa_calc_vn_1996_2018) = c("Período", "Pa calculado")
p_tradables_mgeo_vn_1996_2018 = data.frame(px_vn_1996_2018$Período ,sqrt(px_vn_1996_2018$Px * pm_vn_1996_2018$Pm))
colnames(p_tradables_mgeo_vn_1996_2018) = c("Período", "P_tradables (m.geo)")
p_relativos_vn_1996_2018 = deflatores_div(p_tradables_mgeo_vn_1996_2018, pa_vn_1996_2018, "Período", "Prelativos")
prt_pa_calc_vn_1996_2018 = deflatores_div(p_tradables_mgeo_vn_1996_2018, pa_calc_vn_1996_2018, "Período", "Prt com Pa calculado")
pib_p_ano_anterior_1996_2018 = pib_a_vcorr_1996_2018
pib_p_ano_anterior_1996_2018[1,2] = NA
for (i in 2:dim(pib_a_vcorr_1996_2018)[1]){
pib_p_ano_anterior_1996_2018[i,2] = pib_a_vcorr_1996_2018[(i-1),2] * (pib_a_vra_1996_2018[i,2]/100+1)
}
tt_vn_1996_2018 = deflatores_div(px_vn_1996_2018, pm_vn_1996_2018, "Período", "Termos de troca")
x_m_vn_1996_2018 = deflatores_sub(export_a_vcorr_1996_2018, import_a_vcorr_1996_2018, "Período", "(X-M)")
x_m_pa_vn_1996_2018 = deflatores_div(x_m_vn_1996_2018, pa_vn_1996_2018, "Período", "(X-M)/Pa")
x_px_vn_1996_2018 = deflatores_div(export_a_vcorr_1996_2018, px_vn_1996_2018, "Período", "X/Px")
m_pm_vn_1996_2018 = deflatores_div(import_a_vcorr_1996_2018, pm_vn_1996_2018, "Período", "M/Pm")
xpx_mpm_vn_1996_2018 = deflatores_sub(x_px_vn_1996_2018, m_pm_vn_1996_2018, "Período", "X/Px-M/Pm")
gc_vn_1996_2018 = deflatores_sub(x_m_pa_vn_1996_2018, xpx_mpm_vn_1996_2018, "Período", "GC")
gc_pib_vn_1996_2018 = deflatores_div(gc_vn_1996_2018, pib_p_ano_anterior_1996_2018, "Período", "GC/PIB")
rib_p_ano_anterior_vn_1996_2018 = deflatores_soma(gc_vn_1996_2018, pib_p_ano_anterior_1996_2018, "Período", "RIB a preços do ano anterior")
var_rib_1_vn_1996_2018 = pib_a_vcorr_1996_2018
var_rib_1_vn_1996_2018[1,2] = NA
for (i in 2:dim(pib_a_vcorr_1996_2018)[1]){
var_rib_1_vn_1996_2018[i,2] = rib_p_ano_anterior_vn_1996_2018[i,-1] / pib_a_vcorr_1996_2018[(i-1),-1]
}
ind_pib_vn_1996_2018 = pib_a_vra_1996_2018
ind_pib_vn_1996_2018[1,2] = 100
for (i in 2:dim(pib_a_vra_1996_2018)[1]){
ind_pib_vn_1996_2018[i,2] = ind_pib_vn_1996_2018[i-1,2] * (pib_a_vra_1996_2018[i,2] / 100 + 1)
}
ind_rib_vn_1996_2018 = var_rib_1_vn_1996_2018
ind_rib_vn_1996_2018[1,2] = 100
for (i in 2:dim(var_rib_1_vn_1996_2018)[1]){
ind_rib_vn_1996_2018[i,2] = ind_rib_vn_1996_2018[i-1,2]*var_rib_1_vn_1996_2018[i,2]
}
ind_rib_pib_vn_1996_2018 = (ind_rib_vn_1996_2018[,-1] / ind_pib_vn_1996_2018[,-1])*100
ind_rib_pib_vn_1996_2018 = data.frame(ind_rib_vn_1996_2018[,1], ind_rib_pib_vn_1996_2018)
colnames(ind_rib_pib_vn_1996_2018) = c("Período", "Índice RIB/PIB(Pa)")
######PARTE 4######
#Carregando dados anuais 2000-2017 (ref 2010)
tabela_ca_2000_2017= read_excel("dados.xlsx", sheet = "Anual_2000-2017 (ref2010)")
#valores correntes
tabela_ca_2000_2017_vcorr = arrumar_tabelas(tabela_ca_2000_2017, 2:10)
pib_a_vcorr_2000_2017 = separar_colunas('Período', 'PIB', tabela_ca_2000_2017_vcorr)
consumo_familias_a_vcorr_2000_2017 = separar_colunas('Período', 'Consumo das Famílias', tabela_ca_2000_2017_vcorr)
consumo_governo_a_vcorr_2000_2017 = separar_colunas('Período', 'Consumo do Governo', tabela_ca_2000_2017_vcorr)
fbkf_a_vcorr_2000_2017 = separar_colunas('Período', 'Formação Bruta de Capital Fixo', tabela_ca_2000_2017_vcorr)
export_a_vcorr_2000_2017 = separar_colunas('Período', 'Exportação', tabela_ca_2000_2017_vcorr)
import_a_vcorr_2000_2017 = separar_colunas('Período', 'Importação', tabela_ca_2000_2017_vcorr)
absorv_dom_a_vcorr_2000_2017 = separar_colunas('Período', 'Absorção Doméstica', tabela_ca_2000_2017_vcorr)
#Valores constantes
tabela_ca_2000_2017_vcon = arrumar_tabelas(tabela_ca_2000_2017, 11:19)
pib_a_vcon_2000_2017 = separar_colunas('Período', 'PIB = PIB a preços do ano anterior', tabela_ca_2000_2017_vcon)
consumo_familias_a_vcon_2000_2017 = separar_colunas('Período', 'Consumo das Famílias', tabela_ca_2000_2017_vcon)
consumo_governo_a_vcon_2000_2017 = separar_colunas('Período', 'Consumo do Governo', tabela_ca_2000_2017_vcon)
fbkf_a_vcon_2000_2017 = separar_colunas('Período', 'Formação Bruta de Capital Fixo', tabela_ca_2000_2017_vcon)
export_a_vcon_2000_2017 = separar_colunas('Período', 'Exportação', tabela_ca_2000_2017_vcon)
import_a_vcon_2000_2017 = separar_colunas('Período', 'Importação', tabela_ca_2000_2017_vcon)
absorv_dom_a_vcon_2000_2017 = separar_colunas('Período', 'Absorção Doméstica', tabela_ca_2000_2017_vcon)
#Deflatores com valores constantes
px_pc_2000_2017 = deflatores_div(export_a_vcorr_2000_2017, export_a_vcon_2000_2017, "Período", "Px")
pm_pc_2000_2017 = deflatores_div(import_a_vcorr_2000_2017, import_a_vcon_2000_2017, "Período", "Pm")
pa_pc_2000_2017 = deflatores_div(absorv_dom_a_vcorr_2000_2017, absorv_dom_a_vcon_2000_2017, "Período", "Pa")
p_pib_pc_2000_2017 = deflatores_div(pib_a_vcorr_2000_2017, pib_a_vcon_2000_2017, "Período", "Ppib")
#Cálculo Pa calculado
saa_pc_2000_2017 = deflatores_div(absorv_dom_a_vcorr_2000_2017, pib_a_vcorr_2000_2017, "Período", "Saa")
p_pib_saa_pc_2000_2017 = deflatores_mult(p_pib_pc_2000_2017, saa_pc_2000_2017, "Período", "Ppib * Saa")
sx_pc_2000_2017 = deflatores_div(export_a_vcorr_2000_2017, pib_a_vcorr_2000_2017, "Período", "Sx")
sm_pc_2000_2017 = (import_a_vcorr_2000_2017[,-1] / pib_a_vcorr_2000_2017[,-1])*-1 #Precisa fazer ajuste nos valores negativos
sm_pc_2000_2017 = data.frame(import_a_vcorr_2000_2017[,1], sm_pc_2000_2017)
colnames(sm_pc_2000_2017) = c("Período", "Sm")
sxpx_smpx_pc_2000_2017 = (sx_pc_2000_2017[,-1]/px_pc_2000_2017[,-1]) - (sm_pc_2000_2017[,-1]/pm_pc_2000_2017[,-1])
sxpx_smpx_pc_2000_2017 = data.frame(sx_pc_2000_2017[,1] , sxpx_smpx_pc_2000_2017)
colnames(sxpx_smpx_pc_2000_2017) = c("Período", " (Sx/Px - Sm/Pm)")
pa_calc_pc_2000_2017 = p_pib_saa_pc_2000_2017[,-1] / (1 - p_pib_pc_2000_2017[,-1] * sxpx_smpx_pc_2000_2017[,-1])
pa_calc_pc_2000_2017 = data.frame(p_pib_saa_pc_2000_2017[,1], pa_calc_pc_2000_2017)
colnames(pa_calc_pc_2000_2017) = c("Período", "Pa calculado")
p_tradables_mgeo_pc_2000_2017 = data.frame(px_pc_2000_2017$Período ,sqrt(px_pc_2000_2017$Px * pm_pc_2000_2017$Pm))
colnames(p_tradables_mgeo_pc_2000_2017) = c("Período", "P_tradables (m.geo)")
p_relativos_pc_2000_2017 = deflatores_div(p_tradables_mgeo_pc_2000_2017, pa_pc_2000_2017, "Período", "Prelativos")
prt_pa_calc_pc_2000_2017 = deflatores_div(p_tradables_mgeo_pc_2000_2017, pa_calc_pc_2000_2017, "Período", "Prt com Pa calculado")
var_pib_1_pc_2000_2017 = pib_a_vcorr_2000_2017
for (i in 2:dim(pib_a_vcorr_2000_2017)[1]){
var_pib_1_pc_2000_2017[i,2] = pib_a_vcon_2000_2017[i,-1] / pib_a_vcorr_2000_2017[i-1,-1]
}
tt_pc_2000_2017 = deflatores_div(px_pc_2000_2017, pm_pc_2000_2017, "Período", "Termos de troca")
x_m_pc_2000_2017 = deflatores_soma(export_a_vcorr_2000_2017, import_a_vcorr_2000_2017, "Período", "(X-M)")
x_m_pa_pc_2000_2017 = deflatores_div(x_m_pc_2000_2017, pa_pc_2000_2017, "Período", "(X-M)/Pa")
x_px_pc_2000_2017 = deflatores_div(export_a_vcorr_2000_2017, px_pc_2000_2017, "Período", "X/Px")
m_pm_pc_2000_2017 = -import_a_vcorr_2000_2017[,-1] / pm_pc_2000_2017[,-1]
m_pm_pc_2000_2017 = data.frame(import_a_vcorr_2000_2017[,1], m_pm_pc_2000_2017)
colnames(m_pm_pc_2000_2017) = c("Período", "M/Pm")
xpx_mpm_pc_2000_2017 = deflatores_sub(x_px_pc_2000_2017, m_pm_pc_2000_2017, "Período", "X/Px-M/Pm")
gc_pc_2000_2017 = deflatores_sub(x_m_pa_pc_2000_2017, xpx_mpm_pc_2000_2017, "Período", "GC")
gc_pib_pc_2000_2017 = deflatores_div(gc_pc_2000_2017, pib_a_vcon_2000_2017, "Período", "GC/PIB")
rib_p_ano_anterior_pc_2000_2017 = deflatores_soma(gc_pc_2000_2017, pib_a_vcon_2000_2017, "Período", "RIB a preços do ano anterior")
var_rib_1_pc_2000_2017 = pib_a_vcorr_2000_2017
for (i in 2:dim(pib_a_vcorr_2000_2017)[1]){
var_rib_1_pc_2000_2017[i,2] = rib_p_anoanterior_pc_2000_2017[i,-1] / pib_a_vcorr_2000_2017[i-1,-1]
}
ind_pib_pc_2000_2017 = var_pib_1_pc_2000_2017
for (i in 2:dim(var_pib_1_pc_2000_2017)[1]){
ind_pib_pc_2000_2017[1,2] = 100
ind_pib_pc_2000_2017[i,2] = ind_pib_pc_2000_2017[i-1,2]*var_pib_1_pc_2000_2017[i,2]
}
ind_rib_pc_2000_2017 = var_rib_1_pc_2000_2017
for (i in 2:dim(var_rib_1_pc_2000_2017)[1]){
ind_rib_pc_2000_2017[1,2] = 100
ind_rib_pc_2000_2017[i,2] = ind_rib_pc_2000_2017[i-1,2]*var_rib_1_pc_2000_2017[i,2]
}
ind_rib_pib_pc_2000_2017 = (ind_rib_pc_2000_2017[,-1] / ind_pib_pc_2000_2017[,-1])*100
ind_rib_pib_pc_2000_2017 = data.frame(ind_rib_pc_2000_2017[,1], ind_rib_pib_pc_2000_2017)
#SNA (2008)
consolida_series = function(serie1, serie2, serie3, serie4){
serie1 = apply(serie1,2,function(x)as.numeric(gsub(",",".",x)))
serie1 = as.data.frame(serie1)
serie1 = filter(serie1, Período < 1991)
serie2 = apply(serie2,2,function(x)as.numeric(gsub(",",".",x)))
serie2 = as.data.frame(serie2)
serie2 = filter(serie2, Período > 1990, Período < 1997)
serie3 = apply(serie3,2,function(x)as.numeric(gsub(",",".",x)))
serie3 = as.data.frame(serie3)
serie3_1 = filter(serie3, Período > 1996, Período < 2001)
serie4 = apply(serie4,2,function(x)as.numeric(gsub(",",".",x)))
serie4 = as.data.frame(serie4)
serie4 = filter(serie4, Período > 2000, Período < 2018)
serie3_2 = filter(serie3, Período > 2017)
serie1 = na.omit(serie1)
serie2 = na.omit(serie2)
serie3 = na.omit(serie3)
serie4 = na.omit(serie4)
serie3_1 = na.omit(serie3_1)
serie3_2 = na.omit(serie3_2)
primeira_juncao = merge(serie1, serie2, by = "Período", all = T)
segunda_juncao = merge(primeira_juncao, serie3_1, by = "Período", all = T)
terceira_juncao = merge(segunda_juncao, serie4, by = "Período", all = T)
quarta_juncao = merge(terceira_juncao, serie3_2, by = "Período", all = T)
quarta_juncao = apply(quarta_juncao,2,function(x)as.numeric(gsub(",",".",x)))
quarta_juncao = as.data.frame(quarta_juncao)
colnames(quarta_juncao) = c("Período", "Série 1", "Série 2", "Série 3", "Série 4")
base_final = cbind.data.frame(Período=quarta_juncao$'Período', Série = rowSums(quarta_juncao[, -1], na.rm = TRUE))
return(base_final)
}
p_pib_SNA = consolida_series(p_pib_1947_1989, p_pib_vn_1990_2000, p_pib_vn_1996_2018, p_pib_pc)
p_pib_1947_1989
library(dplyr)
p_pib_SNA = consolida_series(p_pib_1947_1989, p_pib_vn_1990_2000, p_pib_vn_1996_2018, p_pib_pc)
p_pib_SNA = consolida_series(p_pib_1947_1989, p_pib_vn_1990_2000, p_pib_vn_1996_2018, p_pib_pc_2000_2017)
View(p_pib_SNA)
tabela_ca_1947_1989
View(tabela_ca_1947_1989)
tabela_ca_1947_1989 = read_excel("dados.xlsx", sheet = "Anual_1947-1989 (ref1987)")
tabela_ca_1947_1989 = arrumar_tabelas(tabela_ca_1947_1989, 2:62)
#Valores correntes
pib_a_vcorr_1947_1989 = separar_colunas('Período', 'PIB', tabela_ca_1947_1989)
pib_a_SNA = consolida_series(pib_a_vcorr_1947_1989, pib_a_vcorr_1990_2000, pib_a_vcorr_1996_2018, pib_a_vcorr_2000_2017)
View(pib_a_SNA)
######PARTE 1######
#Carregando arquivo das contas anuais 1947-1989 (ref1987)
tabela_ca_1947_1989 = read_excel("dados.xlsx", sheet = "Anual_1947-1989 (ref1987)")
tabela_ca_1947_1989 = arrumar_tabelas(tabela_ca_1947_1989, 2:62)
#Importando deflatores
px_1947_1989 = separar_colunas('Período', 'Px_preço', tabela_ca_1947_1989)
pm_1947_1989 = separar_colunas('Período', 'Pm_preço', tabela_ca_1947_1989)
pa_1947_1989 = separar_colunas('Período', 'Pa - IPC-RJ Média', tabela_ca_1947_1989)
p_pib_1947_1989 = separar_colunas('Período', 'Ppib', tabela_ca_1947_1989)
pa_calc_1947_1989 = separar_colunas('Período', 'Pa calculado', tabela_ca_1947_1989)
p_tradables_mgeo_1947_1989 = separar_colunas('Período', 'P_tradables (m.geo)', tabela_ca_1947_1989)
p_relativos_1947_1989 = separar_colunas('Período', 'Preços relativos (P_tradables/P_ñtradables)', tabela_ca_1947_1989)
prt_pa_calc_1947_1989 = separar_colunas('Período', 'Prt com Pa calculado', tabela_ca_1947_1989)
pib_p_ano_anterior_1947_1989 = separar_colunas('Período', 'PIB a preços do ano anterior', tabela_ca_1947_1989)
tt_1947_1989 = separar_colunas('Período', 'Termos de Troca (Px/Pm)', tabela_ca_1947_1989)
x_m_1947_1989 = separar_colunas('Período', '(X-M)', tabela_ca_1947_1989)
x_m_pa_1947_1989 = separar_colunas('Período', '(X-M)/Pa', tabela_ca_1947_1989)
x_px_1947_1989 = separar_colunas('Período', 'X/Px_preço', tabela_ca_1947_1989)
m_pm_1947_1989 = separar_colunas('Período', 'M/Pm_preço', tabela_ca_1947_1989)
xpx_mpm_1947_1989 = separar_colunas('Período', 'X/Px-M/Pm', tabela_ca_1947_1989)
gc_1947_1989 = separar_colunas('Período', 'GC', tabela_ca_1947_1989)
gc_pib_1947_1989 = separar_colunas('Período', 'GC/PIB', tabela_ca_1947_1989)
rib_p_ano_anterior_1947_1989 = separar_colunas('Período', 'RIB a preços do ano anterior', tabela_ca_1947_1989)
ind_pib_1947_1989 = separar_colunas('Período', 'Índice PIB', tabela_ca_1947_1989)
ind_rib_1947_1989 = separar_colunas('Período', 'Índice RIB Pa', tabela_ca_1947_1989)
ind_rib_pib_1947_1989 = separar_colunas('Período', 'Índice RIB/PIB(Pa)', tabela_ca_1947_1989)
######PARTE 2######
#Carregando arquivo das contas anuais 1990-2000 (ref1985e2000)
tabela_ca_1990_2000 = read_excel("dados.xlsx", sheet = "Anual_1990-2000 (ref1985e2000)")
#valores correntes
tabela_ca_1990_2000_vcorr = arrumar_tabelas(tabela_ca_1990_2000, 2:10)
pib_a_vcorr_1990_2000 = separar_colunas('Período', 'PIB', tabela_ca_1990_2000_vcorr)
consumo_familias_a_vcorr_1990_2000 = separar_colunas('Período', 'Consumo das Famílias', tabela_ca_1990_2000_vcorr)
consumo_governo_a_vcorr_1990_2000 = separar_colunas('Período', 'Consumo do Governo', tabela_ca_1990_2000_vcorr)
fbkf_a_vcorr_1990_2000 = separar_colunas('Período', 'Formação Bruta de Capital Fixo', tabela_ca_1990_2000_vcorr)
var_est_a_vcorr_1996_2018 = separar_colunas('Período', 'Variação de Estoque', tabela_ca_1990_2000_vcorr)
export_a_vcorr_1990_2000 = separar_colunas('Período', 'Exportação', tabela_ca_1990_2000_vcorr)
import_a_vcorr_1990_2000 = separar_colunas('Período', 'Importação', tabela_ca_1990_2000_vcorr)
absorv_dom_a_vcorr_1990_2000 = separar_colunas('Período', 'Absorção Doméstica', tabela_ca_1990_2000_vcorr)
fbk_a_vcorr_1990_2000 = separar_colunas('Período', 'Formação Bruta de Capital', tabela_ca_1990_2000_vcorr)
#Variação real anual
tabela_ca_1990_2000_vra = arrumar_tabelas(tabela_ca_1990_2000, 11:17)
pib_a_vra_1990_2000 = separar_colunas('Período', 'PIB', tabela_ca_1990_2000_vra)
consumo_familias_a_vra_1990_2000 = separar_colunas('Período', 'Consumo das Famílias', tabela_ca_1990_2000_vra)
consumo_governo_a_vra_1990_2000 = separar_colunas('Período', 'Consumo do Governo', tabela_ca_1990_2000_vra)
fbkf_a_vra_1990_2000 = separar_colunas('Período', 'Formação Bruta de Capital Fixo', tabela_ca_1990_2000_vra)
fbk_a_vra_1990_2000 = separar_colunas('Período', 'Formação Bruta de Capital', tabela_ca_1990_2000_vra)
export_a_vra_1990_2000 = separar_colunas('Período', 'Exportação', tabela_ca_1990_2000_vra)
import_a_vra_1990_2000 = separar_colunas('Período', 'Importação', tabela_ca_1990_2000_vra)
pib_p_SNA = consolida_series(pib_p_ano_anterior_1947_1989, pib_p_ano_anterior_1990_2000, pib_p_ano_anterior_1996_2018, pib_a_vcon_2000_2017)
View(pib_p_ano_anterior_1947_1989)
View(pib_p_ano_anterior_1990_2000)
filter(pib_p_ano_anterior_1947_1989, Período <1991)
a = filter(pib_p_ano_anterior_1947_1989, Período < 1991)
View(a)
a = na.omit(a)
pib_p_SNA = consolida_series(pib_p_ano_anterior_1947_1989, pib_p_ano_anterior_1990_2000, pib_p_ano_anterior_1996_2018, pib_a_vcon_2000_2017)
View(pib_p_SNA)
consolida_series = function(serie1, serie2, serie3, serie4, nome_juncao){
serie1 = apply(serie1,2,function(x)as.numeric(gsub(",",".",x)))
serie1 = as.data.frame(serie1)
serie1 = filter(serie1, Período < 1991)
serie2 = apply(serie2,2,function(x)as.numeric(gsub(",",".",x)))
serie2 = as.data.frame(serie2)
serie2 = filter(serie2, Período > 1990, Período < 1997)
serie3 = apply(serie3,2,function(x)as.numeric(gsub(",",".",x)))
serie3 = as.data.frame(serie3)
serie3_1 = filter(serie3, Período > 1996, Período < 2001)
serie4 = apply(serie4,2,function(x)as.numeric(gsub(",",".",x)))
serie4 = as.data.frame(serie4)
serie4 = filter(serie4, Período > 2000, Período < 2018)
serie3_2 = filter(serie3, Período > 2017)
serie1 = na.omit(serie1)
serie2 = na.omit(serie2)
serie3 = na.omit(serie3)
serie4 = na.omit(serie4)
serie3_1 = na.omit(serie3_1)
serie3_2 = na.omit(serie3_2)
primeira_juncao = merge(serie1, serie2, by = "Período", all = T)
segunda_juncao = merge(primeira_juncao, serie3_1, by = "Período", all = T)
terceira_juncao = merge(segunda_juncao, serie4, by = "Período", all = T)
quarta_juncao = merge(terceira_juncao, serie3_2, by = "Período", all = T)
quarta_juncao = apply(quarta_juncao,2,function(x)as.numeric(gsub(",",".",x)))
quarta_juncao = as.data.frame(quarta_juncao)
colnames(quarta_juncao) = c("Período", "Série 1", "Série 2", "Série 3", "Série 4")
base_final = cbind.data.frame(Período=quarta_juncao$'Período', nome_juncao = rowSums(quarta_juncao[, -1], na.rm = TRUE))
return(base_final)
}
p_pib_SNA = consolida_series(p_pib_1947_1989, p_pib_vn_1990_2000, p_pib_vn_1996_2018, p_pib_pc_2000_2017, "p_pib")
View(p_pib_SNA)
#SNA (2008)
consolida_series = function(serie1, serie2, serie3, serie4, nome_juncao){
serie1 = apply(serie1,2,function(x)as.numeric(gsub(",",".",x)))
serie1 = as.data.frame(serie1)
serie1 = filter(serie1, Período < 1991)
serie2 = apply(serie2,2,function(x)as.numeric(gsub(",",".",x)))
serie2 = as.data.frame(serie2)
serie2 = filter(serie2, Período > 1990, Período < 1997)
serie3 = apply(serie3,2,function(x)as.numeric(gsub(",",".",x)))
serie3 = as.data.frame(serie3)
serie3_1 = filter(serie3, Período > 1996, Período < 2001)
serie4 = apply(serie4,2,function(x)as.numeric(gsub(",",".",x)))
serie4 = as.data.frame(serie4)
serie4 = filter(serie4, Período > 2000, Período < 2018)
serie3_2 = filter(serie3, Período > 2017)
serie1 = na.omit(serie1)
serie2 = na.omit(serie2)
serie3 = na.omit(serie3)
serie4 = na.omit(serie4)
serie3_1 = na.omit(serie3_1)
serie3_2 = na.omit(serie3_2)
primeira_juncao = merge(serie1, serie2, by = "Período", all = T)
segunda_juncao = merge(primeira_juncao, serie3_1, by = "Período", all = T)
terceira_juncao = merge(segunda_juncao, serie4, by = "Período", all = T)
quarta_juncao = merge(terceira_juncao, serie3_2, by = "Período", all = T)
quarta_juncao = apply(quarta_juncao,2,function(x)as.numeric(gsub(",",".",x)))
quarta_juncao = as.data.frame(quarta_juncao)
colnames(quarta_juncao) = c("Período", "Série 1", "Série 2", "Série 3", "Série 4")
base_final = cbind.data.frame(Período=quarta_juncao$'Período', Série = rowSums(quarta_juncao[, -1], na.rm = TRUE))
colnames(base_final) = c("Período", nome_juncao)
return(base_final)
}
p_pib_SNA = consolida_series(p_pib_1947_1989, p_pib_vn_1990_2000, p_pib_vn_1996_2018, p_pib_pc_2000_2017, "p_pib")
pib_p_SNA = consolida_series(pib_p_ano_anterior_1947_1989, pib_p_ano_anterior_1990_2000, pib_p_ano_anterior_1996_2018, pib_a_vcon_2000_2017, "PIBreal (PIB a preços do ano anterior)")
x_px_SNA = consolida_series(x_px_1947_1989, x_px_vn_1990_2000, x_px_vn_1996_2018, x_px_pc_2000_2017, "{- (X/Px)}")
View(x_px_SNA)
m_pm_SNA = consolida_serie(m_pm_1947_1989, m_pm_vn_1990_2000. m_pm_vn_1996_2018, m_pm_pc_2000_2017, "{+ (M/Pm)}")
m_pm_SNA = consolida_serie(m_pm_1947_1989, m_pm_vn_1990_2000, m_pm_vn_1996_2018, m_pm_pc_2000_2017, "{+ (M/Pm)}")
m_pm_SNA = consolida_series(m_pm_1947_1989, m_pm_vn_1990_2000, m_pm_vn_1996_2018, m_pm_pc_2000_2017, "{+ (M/Pm)}")
View(m_pm_SNA)
absorv_dom_a_vcorr_1947_1989 = separar_colunas('Período', 'Absorção Doméstica', tabela_ca_1947_1989)
View(absorv_dom_a_vcorr_1947_1989)
absorv_dom_SNA = pib_p_SNA[,-1] + x_px_SNA[,-1] + m_pm_SNA[,-1]
absorv_dom_SNA = data.frame(pib_p_SNA[,1], absorv_dom_SNA)
colnames(absorv_dom_SNA) = c("Período", "(= Absorção Interna)")
View(absorv_dom_SNA)
absorv_dom_SNA = pib_p_SNA[,-1] + x_px_SNA[,-1] + m_pm_SNA[,-1]
pib_p_SNA
x_px_SNA
m_pm_SNA
absorv_dom_SNA = pib_p_SNA[,-1] - x_px_SNA[,-1] + m_pm_SNA[,-1]
absorv_dom_SNA = data.frame(pib_p_SNA[,1], absorv_dom_SNA)
colnames(absorv_dom_SNA) = c("Período", "(= Absorção Interna)")
export_a_vcorr_1947_1989 = separar_colunas('Período', 'Exportação', tabela_ca_1947_1989)
export_SNA = consolida_series(export_a_vcorr_1947_1989, export_a_vcorr_1990_2000, export_a_vcorr_1996_2018, export_a_vcorr_1996_2018, "Exportações")
View(export_SNA)
pa_SNA = consolida_series(pa_1947_1989, pa_vn_1990_2000, pa_vn_1996_2018, pa_pc_2000_2017, "Pa")
View(pa_SNA)
x_pa_SNA = export_SNA[,-1] / pa_SNA[,-1]
x_pa_SNA = data.frame(export_SNA[,1], x_pa_SNA)
colnames(x_pa_SNA) = c("Período", "{+ (X/Pa)}")
View(x_pa_SNA)
View(x_pa_SNA)
consolida_series = function(serie1, serie2, serie3, serie4, nome_juncao){
serie1 = apply(serie1,2,function(x)as.numeric(gsub(",",".",x)))
serie1 = as.data.frame(serie1)
serie1 = filter(serie1, Período > 1947, Período < 1991)
serie2 = apply(serie2,2,function(x)as.numeric(gsub(",",".",x)))
serie2 = as.data.frame(serie2)
serie2 = filter(serie2, Período > 1990, Período < 1997)
serie3 = apply(serie3,2,function(x)as.numeric(gsub(",",".",x)))
serie3 = as.data.frame(serie3)
serie3_1 = filter(serie3, Período > 1996, Período < 2001)
serie4 = apply(serie4,2,function(x)as.numeric(gsub(",",".",x)))
serie4 = as.data.frame(serie4)
serie4 = filter(serie4, Período > 2000, Período < 2018)
serie3_2 = filter(serie3, Período > 2017)
serie1 = na.omit(serie1)
serie2 = na.omit(serie2)
serie3 = na.omit(serie3)
serie4 = na.omit(serie4)
serie3_1 = na.omit(serie3_1)
serie3_2 = na.omit(serie3_2)
primeira_juncao = merge(serie1, serie2, by = "Período", all = T)
segunda_juncao = merge(primeira_juncao, serie3_1, by = "Período", all = T)
terceira_juncao = merge(segunda_juncao, serie4, by = "Período", all = T)
quarta_juncao = merge(terceira_juncao, serie3_2, by = "Período", all = T)
quarta_juncao = apply(quarta_juncao,2,function(x)as.numeric(gsub(",",".",x)))
quarta_juncao = as.data.frame(quarta_juncao)
colnames(quarta_juncao) = c("Período", "Série 1", "Série 2", "Série 3", "Série 4")
base_final = cbind.data.frame(Período=quarta_juncao$'Período', Série = rowSums(quarta_juncao[, -1], na.rm = TRUE))
colnames(base_final) = c("Período", nome_juncao)
return(base_final)
}
#Junção das diferentes séries
p_pib_SNA = consolida_series(p_pib_1947_1989, p_pib_vn_1990_2000, p_pib_vn_1996_2018, p_pib_pc_2000_2017, "Deflator do PIB")
pib_p_SNA = consolida_series(pib_p_ano_anterior_1947_1989, pib_p_ano_anterior_1990_2000, pib_p_ano_anterior_1996_2018, pib_a_vcon_2000_2017, "PIBreal (PIB a preços do ano anterior)")
x_px_SNA = consolida_series(x_px_1947_1989, x_px_vn_1990_2000, x_px_vn_1996_2018, x_px_pc_2000_2017, "{- (X/Px)}")
m_pm_SNA = consolida_series(m_pm_1947_1989, m_pm_vn_1990_2000, m_pm_vn_1996_2018, m_pm_pc_2000_2017, "{+ (M/Pm)}")
absorv_dom_SNA = pib_p_SNA[,-1] - x_px_SNA[,-1] + m_pm_SNA[,-1]
absorv_dom_SNA = data.frame(pib_p_SNA[,1], absorv_dom_SNA)
colnames(absorv_dom_SNA) = c("Período", "(= Absorção Interna)")
export_SNA = consolida_series(export_a_vcorr_1947_1989, export_a_vcorr_1990_2000, export_a_vcorr_1996_2018, export_a_vcorr_1996_2018, "Exportações")
pa_SNA = consolida_series(pa_1947_1989, pa_vn_1990_2000, pa_vn_1996_2018, pa_pc_2000_2017, "Pa")
x_pa_SNA = export_SNA[,-1] / pa_SNA[,-1]
x_pa_SNA = data.frame(export_SNA[,1], x_pa_SNA)
View(p_pib_SNA)
View(pib_p_SNA)
View(x_px_SNA)
View(m_pm_SNA)
View(absorv_dom_SNA)
View(x_pa_SNA)
colnames(x_pa_SNA) = c("Período", "{+ (X/Pa)}")
pa_SNA
export_SNA
export_a_vcorr_1947_1989
pa_1947_1989
export_a_vcorr_1947_1989
a = filter(export_a_vcorr_1947_1989, Período >1947)
View(a)
export_a_vcorr_1947_1989
pa_1947_1989
export_SNA = consolida_series(export_a_vcorr_1947_1989, export_a_vcorr_1990_2000, export_a_vcorr_1996_2018, export_a_vcorr_1996_2018, "Exportações")
pa_SNA = consolida_series(pa_calc_1947_1989, pa_vn_1990_2000, pa_vn_1996_2018, pa_pc_2000_2017, "Pa")
x_pa_SNA = export_SNA[,-1] / pa_SNA[,-1]
x_pa_SNA = data.frame(export_SNA[,1], x_pa_SNA)
colnames(x_pa_SNA) = c("Período", "{+ (X/Pa)}")
import_a_vcorr_1947_1989
import_a_vcorr_1990_2000
import_a_vcorr_1947_1989 = separar_colunas('Período', 'Importação', tabela_ca_1947_1989)
import_SNA = consolida_series(import_a_vcorr_1947_1989, import_a_vcorr_1990_2000, import_a_vcorr_1996_2018, import_a_vcorr_1996_2018, "Importações")
m_pa_SNA = import_SNA[,-1] / pa_SNA[,-1]
m_pa_SNA = data.frame(import_SNA[,1], m_pa_SNA)
colnames(x_pa_SNA) = c("Período", "{- (M/Pa)}")
View(m_pa_SNA)
colnames(m_pa_SNA) = c("Período", "{- (M/Pa)}")
rib_SNA = absorv_dom_SNA[,-1] + x_pa_SNA[,-1] + m_pa_SNA[,-1]
rib_SNA = data.frame(absorv_dom_SNA[,1], rib_SNA)
colnames(rib_SNA) = c("Período", "(= RIBreal)")
View(rib_SNA)
rib_SNA = absorv_dom_SNA[,-1] + x_pa_SNA[,-1] - m_pa_SNA[,-1]
rib_SNA = data.frame(absorv_dom_SNA[,1], rib_SNA)
colnames(rib_SNA) = c("Período", "(= RIBreal)")
import_SNA = consolida_series(import_a_vcorr_1947_1989, import_a_vcorr_1990_2000, import_a_vcorr_1996_2018, import_a_vcorr_2000_2017, "Importações")
import_SNA = consolida_series(import_a_vcorr_1947_1989, import_a_vcorr_1990_2000, import_a_vcorr_1996_2018, import_a_vcorr_2000_2017, "Importações")
m_pa_SNA = import_SNA[,-1] / pa_SNA[,-1]
m_pa_SNA = data.frame(import_SNA[,1], m_pa_SNA)
colnames(m_pa_SNA) = c("Período", "{- (M/Pa)}")
gc_SNA = consolida_series(gc_1947_1989, gc_vn_1990_2000, gc_vn_1996_2018, gc_pc_2000_2017, "GC")
View(gc_SNA)
gc_SNA = deflatores_sub(pib_a_SNA, rib_SNA, "GC")
View(deflatores_sub)
gc_SNA = deflatores_sub(pib_a_SNA, rib_SNA, "Período ","GC")
pib_a_SNA
rib_SNA
pib_a_SNA
p_pib_SNA = consolida_series(p_pib_1947_1989, p_pib_vn_1990_2000, p_pib_vn_1996_2018, p_pib_pc_2000_2017, "Deflator do PIB")
pib_a_SNA
p_pib_1947_1989
#Funções
consolida_series = function(serie1, serie2, serie3, serie4, nome_juncao){
serie1 = apply(serie1,2,function(x)as.numeric(gsub(",",".",x)))
serie1 = as.data.frame(serie1)
serie1 = filter(serie1, Período > 1947, Período < 1991)
serie2 = apply(serie2,2,function(x)as.numeric(gsub(",",".",x)))
serie2 = as.data.frame(serie2)
serie2 = filter(serie2, Período > 1990, Período < 1997)
serie3 = apply(serie3,2,function(x)as.numeric(gsub(",",".",x)))
serie3 = as.data.frame(serie3)
serie3_1 = filter(serie3, Período > 1996, Período < 2001)
serie4 = apply(serie4,2,function(x)as.numeric(gsub(",",".",x)))
serie4 = as.data.frame(serie4)
serie4 = filter(serie4, Período > 2000, Período < 2018)
serie3_2 = filter(serie3, Período > 2017)
serie1 = na.omit(serie1)
serie2 = na.omit(serie2)
serie3 = na.omit(serie3)
serie4 = na.omit(serie4)
serie3_1 = na.omit(serie3_1)
serie3_2 = na.omit(serie3_2)
primeira_juncao = merge(serie1, serie2, by = "Período", all = T)
segunda_juncao = merge(primeira_juncao, serie3_1, by = "Período", all = T)
terceira_juncao = merge(segunda_juncao, serie4, by = "Período", all = T)
quarta_juncao = merge(terceira_juncao, serie3_2, by = "Período", all = T)
quarta_juncao = apply(quarta_juncao,2,function(x)as.numeric(gsub(",",".",x)))
quarta_juncao = as.data.frame(quarta_juncao)
colnames(quarta_juncao) = c("Período", "Série 1", "Série 2", "Série 3", "Série 4")
base_final = cbind.data.frame(Período=quarta_juncao$'Período', Série = rowSums(quarta_juncao[, -1], na.rm = TRUE))
colnames(base_final) = c("Período", nome_juncao)
return(base_final)
}
p_pib_SNA = consolida_series(p_pib_1947_1989, p_pib_vn_1990_2000, p_pib_vn_1996_2018, p_pib_pc_2000_2017, "Deflator do PIB")
p_pib_SNA
gc_SNA = deflatores_sub(pib_a_SNA, rib_SNA, "Período ","GC")
pib_a_SNA
pib_p_SNA = consolida_series(pib_p_ano_anterior_1947_1989, pib_p_ano_anterior_1990_2000, pib_p_ano_anterior_1996_2018, pib_a_vcon_2000_2017, "PIBreal (PIB a preços do ano anterior)")
gc_SNA = deflatores_sub(pib_p_SNA, rib_SNA, "Período ","GC")
View(gc_SNA)
gc_pib_SNA = deflatores_div(gc_SNA, pib_p_SNA, "Período", "GC/PIB")
View(gc_pib_SNA)
gc_SNA = deflatores_sub(rib_SNA, pib_p_SNA, "Período ","GC")
gc_pib_SNA = deflatores_div(gc_SNA, pib_p_SNA, "Período", "GC/PIB")
